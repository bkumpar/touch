; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Touch"
#define MyAppVersion "1.0"
#define MyAppPublisher "bkumpar"
#define MyAppExeName "touch.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{A71EAC35-A3B8-4E11-8024-FC98308E2870}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
DefaultDirName={pf}\bkumpar\touch
DisableDirPage=yes
DefaultGroupName={#MyAppName}
DisableProgramGroupPage=yes
OutputDir=.
OutputBaseFilename=setup
Compression=lzma
SolidCompression=yes

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Files]
Source: "..\..\bin\x64\Release\touch.exe"; DestDir: "{app}"; Flags: ignoreversion
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"

[Registry]
Root: HKCU; Subkey: "Software\Classes\*\shell\Touch\";  Flags:  uninsdeletekey
Root: HKCU; Subkey: "Software\Classes\*\shell\Touch\"; ValueType: string; ValueName: "Icon"; ValueData: "{app}\touch.exe, -1"; Flags:  uninsdeletekey
Root: HKCU; Subkey: "Software\Classes\*\shell\Touch\command"; ValueType: string; ValueName: ""; ValueData: "{app}\touch.exe -c ""%1"""; Flags:  uninsdeletekey
Root: HKCU; Subkey: "Environment"; ValueType: expandsz; ValueName: "PATH"; ValueData: "{olddata};{app}"; Check: NotExistsInPath('{olddata}','{app}')

[Code]
function RemoveFromPath(Path: String; Directory: String):String;
var
  p:integer;
  l:integer;
begin
  repeat
      p:=Pos( Directory+';', Path+';');
      if p>0 then
      begin
          l:=Length(Directory+';');
          Delete(Path, p, l);
      end;
  until p=0;
  Result := Path;
end;

function NotExistsInPath(Path: String; Directory: String):Boolean;
begin
  Result :=(Pos( Directory+';', Path+';')=0);
end;


procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
var
  OldPath:String;
  ModifiedPath:String;
begin
  if CurUninstallStep = usPostUninstall then
  begin
    if RegQueryStringValue(HKEY_CURRENT_USER, 'Environment', 'PATH', OldPath) then
    begin
      ModifiedPath := RemoveFromPath(OldPath, ExpandConstant('{app}'));
      RegWriteExpandStringValue(HKEY_CURRENT_USER, 'Environment', 'PATH', ModifiedPath);
    end
  end
end;